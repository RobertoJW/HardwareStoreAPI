// <auto-generated />
using System;
using HardwareStoreAPI.Services;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HardwareStoreAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250504151341_actualizacion3")]
    partial class actualizacion3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("HardwareStoreAPI.Modelo.CarritoCompra", b =>
                {
                    b.Property<int>("id_carrito")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("cantidad")
                        .HasColumnType("int");

                    b.Property<int>("id_producto")
                        .HasColumnType("int");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.HasKey("id_carrito");

                    b.HasIndex("id_producto");

                    b.HasIndex("userId");

                    b.ToTable("CarritoCompras");
                });

            modelBuilder.Entity("HardwareStoreAPI.Modelo.DescripcionPortatilMovil", b =>
                {
                    b.Property<int>("id_descripcionPortatilMovil")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("almacenamiento")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("id_producto")
                        .HasColumnType("int");

                    b.Property<string>("pantalla")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("procesador")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ram")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("sistemaOperativo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("tarjetaGrafica")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id_descripcionPortatilMovil");

                    b.HasIndex("id_producto")
                        .IsUnique();

                    b.ToTable("DescripcionPortatilMovil");
                });

            modelBuilder.Entity("HardwareStoreAPI.Modelo.DescripcionSobremesa", b =>
                {
                    b.Property<int>("id_descripcionSobremesa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("almacenamiento")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("fuentePoder")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("id_producto")
                        .HasColumnType("int");

                    b.Property<string>("motherboard")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("procesador")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ram")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("refrigeracion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("tarjetaGrafica")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id_descripcionSobremesa");

                    b.HasIndex("id_producto")
                        .IsUnique();

                    b.ToTable("DescripcionSobremesa");
                });

            modelBuilder.Entity("HardwareStoreAPI.Modelo.ListaFavoritos", b =>
                {
                    b.Property<int>("id_favorito")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("id_producto")
                        .HasColumnType("int");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.HasKey("id_favorito");

                    b.HasIndex("id_producto");

                    b.HasIndex("userId");

                    b.ToTable("ListaFavoritos");
                });

            modelBuilder.Entity("HardwareStoreAPI.Modelo.Producto", b =>
                {
                    b.Property<int>("id_producto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("category")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("companyBrand")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("imageUrl")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("nameProduct")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("price")
                        .HasColumnType("double");

                    b.HasKey("id_producto");

                    b.ToTable("Productos", (string)null);

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("HardwareStoreAPI.Modelo.Usuario", b =>
                {
                    b.Property<int>("userId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("UrlprofilePhoto")
                        .HasColumnType("longtext");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("userName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("userId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("HardwareStoreAPI.Modelo.Movil", b =>
                {
                    b.HasBaseType("HardwareStoreAPI.Modelo.Producto");

                    b.Property<int?>("ProductoTempId4")
                        .HasColumnType("int");

                    b.Property<int>("pulgadas")
                        .HasColumnType("int");

                    b.ToTable("Moviles", (string)null);
                });

            modelBuilder.Entity("HardwareStoreAPI.Modelo.Portatil", b =>
                {
                    b.HasBaseType("HardwareStoreAPI.Modelo.Producto");

                    b.Property<int>("ProductoTempId51")
                        .HasColumnType("int");

                    b.Property<int>("pulgadas")
                        .HasColumnType("int");

                    b.Property<int>("tipoPc")
                        .HasColumnType("int");

                    b.ToTable("Portatiles", (string)null);
                });

            modelBuilder.Entity("HardwareStoreAPI.Modelo.Sobremesa", b =>
                {
                    b.HasBaseType("HardwareStoreAPI.Modelo.Producto");

                    b.Property<int>("tipoPc")
                        .HasColumnType("int");

                    b.ToTable("Sobremesas", (string)null);
                });

            modelBuilder.Entity("HardwareStoreAPI.Modelo.CarritoCompra", b =>
                {
                    b.HasOne("HardwareStoreAPI.Modelo.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("id_producto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HardwareStoreAPI.Modelo.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("HardwareStoreAPI.Modelo.DescripcionPortatilMovil", b =>
                {
                    b.HasOne("HardwareStoreAPI.Modelo.Producto", "Producto")
                        .WithOne("DescripcionPortatilMovil")
                        .HasForeignKey("HardwareStoreAPI.Modelo.DescripcionPortatilMovil", "id_producto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("HardwareStoreAPI.Modelo.DescripcionSobremesa", b =>
                {
                    b.HasOne("HardwareStoreAPI.Modelo.Producto", "Producto")
                        .WithOne("DescripcionSobremesa")
                        .HasForeignKey("HardwareStoreAPI.Modelo.DescripcionSobremesa", "id_producto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("HardwareStoreAPI.Modelo.ListaFavoritos", b =>
                {
                    b.HasOne("HardwareStoreAPI.Modelo.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("id_producto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HardwareStoreAPI.Modelo.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("HardwareStoreAPI.Modelo.Movil", b =>
                {
                    b.HasOne("HardwareStoreAPI.Modelo.Producto", "Producto")
                        .WithOne("Movil")
                        .HasForeignKey("HardwareStoreAPI.Modelo.Movil", "id_producto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("HardwareStoreAPI.Modelo.Portatil", b =>
                {
                    b.HasOne("HardwareStoreAPI.Modelo.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("id_producto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("HardwareStoreAPI.Modelo.Sobremesa", b =>
                {
                    b.HasOne("HardwareStoreAPI.Modelo.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("id_producto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("HardwareStoreAPI.Modelo.Producto", b =>
                {
                    b.Navigation("DescripcionPortatilMovil")
                        .IsRequired();

                    b.Navigation("DescripcionSobremesa")
                        .IsRequired();

                    b.Navigation("Movil")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
