// <auto-generated />
using System;
using HardwareStoreAPI.Services;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HardwareStoreAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250528154719_NullableUserIdEnCarritoYFavoritos")]
    partial class NullableUserIdEnCarritoYFavoritos
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("CarritoCompraProductos", b =>
                {
                    b.Property<int>("CarritoCompraId")
                        .HasColumnType("int");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.HasKey("CarritoCompraId", "ProductoId");

                    b.HasIndex("ProductoId");

                    b.ToTable("CarritoCompraProductos");
                });

            modelBuilder.Entity("HardwareStoreAPI.Modelo.CarritoCompra", b =>
                {
                    b.Property<int>("id_carrito")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id_carrito"));

                    b.Property<int>("cantidad")
                        .HasColumnType("int");

                    b.Property<int?>("userId")
                        .HasColumnType("int");

                    b.HasKey("id_carrito");

                    b.HasIndex("userId")
                        .IsUnique();

                    b.ToTable("CarritoCompras");
                });

            modelBuilder.Entity("HardwareStoreAPI.Modelo.DescripcionGeneral", b =>
                {
                    b.Property<int>("IdDescripcionGeneral")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdDescripcionGeneral"));

                    b.Property<string>("Almacenamiento")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CPU")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Dimensiones")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("GPU")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("IdProducto")
                        .HasColumnType("int");

                    b.Property<double>("Peso")
                        .HasColumnType("double");

                    b.Property<string>("PlacaBase")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("RAM")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SistemaOperativo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("IdDescripcionGeneral");

                    b.HasIndex("IdProducto")
                        .IsUnique();

                    b.ToTable("DescripcionGeneral");
                });

            modelBuilder.Entity("HardwareStoreAPI.Modelo.ListaFavoritos", b =>
                {
                    b.Property<int>("id_favorito")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id_favorito"));

                    b.Property<int?>("userId")
                        .HasColumnType("int");

                    b.HasKey("id_favorito");

                    b.HasIndex("userId")
                        .IsUnique();

                    b.ToTable("ListaFavoritos");
                });

            modelBuilder.Entity("HardwareStoreAPI.Modelo.Producto", b =>
                {
                    b.Property<int>("IdProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdProducto"));

                    b.Property<string>("Categoria")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ImagenUrl")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NombreEmpresa")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NombreProducto")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("IdProducto");

                    b.ToTable("Productos", (string)null);

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("HardwareStoreAPI.Modelo.Usuario", b =>
                {
                    b.Property<int>("userId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("userId"));

                    b.Property<string>("UrlprofilePhoto")
                        .HasColumnType("longtext");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("userName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("userId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("ListaFavoritosProductos", b =>
                {
                    b.Property<int>("ListaFavoritosId")
                        .HasColumnType("int");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.HasKey("ListaFavoritosId", "ProductoId");

                    b.HasIndex("ProductoId");

                    b.ToTable("ListaFavoritosProductos");
                });

            modelBuilder.Entity("HardwareStoreAPI.Modelo.Movil", b =>
                {
                    b.HasBaseType("HardwareStoreAPI.Modelo.Producto");

                    b.Property<int>("Bateria")
                        .HasColumnType("int");

                    b.Property<int>("Camara")
                        .HasColumnType("int");

                    b.Property<int>("Pulgadas")
                        .HasColumnType("int");

                    b.Property<string>("Resolucion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.ToTable("Moviles", (string)null);
                });

            modelBuilder.Entity("HardwareStoreAPI.Modelo.Portatil", b =>
                {
                    b.HasBaseType("HardwareStoreAPI.Modelo.Producto");

                    b.Property<int>("Bateria")
                        .HasColumnType("int");

                    b.Property<int>("Pulgadas")
                        .HasColumnType("int");

                    b.Property<string>("Resolucion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("tipoPc")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.ToTable("Portatiles", (string)null);
                });

            modelBuilder.Entity("HardwareStoreAPI.Modelo.Sobremesa", b =>
                {
                    b.HasBaseType("HardwareStoreAPI.Modelo.Producto");

                    b.Property<string>("tipoPc")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.ToTable("Sobremesas", (string)null);
                });

            modelBuilder.Entity("CarritoCompraProductos", b =>
                {
                    b.HasOne("HardwareStoreAPI.Modelo.CarritoCompra", null)
                        .WithMany()
                        .HasForeignKey("CarritoCompraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HardwareStoreAPI.Modelo.Producto", null)
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HardwareStoreAPI.Modelo.CarritoCompra", b =>
                {
                    b.HasOne("HardwareStoreAPI.Modelo.Usuario", "Usuario")
                        .WithOne("CarritoCompra")
                        .HasForeignKey("HardwareStoreAPI.Modelo.CarritoCompra", "userId");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("HardwareStoreAPI.Modelo.DescripcionGeneral", b =>
                {
                    b.HasOne("HardwareStoreAPI.Modelo.Producto", "Producto")
                        .WithOne("DescripcionGeneral")
                        .HasForeignKey("HardwareStoreAPI.Modelo.DescripcionGeneral", "IdProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("HardwareStoreAPI.Modelo.ListaFavoritos", b =>
                {
                    b.HasOne("HardwareStoreAPI.Modelo.Usuario", "Usuario")
                        .WithOne("ListaFavoritos")
                        .HasForeignKey("HardwareStoreAPI.Modelo.ListaFavoritos", "userId");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ListaFavoritosProductos", b =>
                {
                    b.HasOne("HardwareStoreAPI.Modelo.ListaFavoritos", null)
                        .WithMany()
                        .HasForeignKey("ListaFavoritosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HardwareStoreAPI.Modelo.Producto", null)
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HardwareStoreAPI.Modelo.Movil", b =>
                {
                    b.HasOne("HardwareStoreAPI.Modelo.Producto", null)
                        .WithOne()
                        .HasForeignKey("HardwareStoreAPI.Modelo.Movil", "IdProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HardwareStoreAPI.Modelo.Portatil", b =>
                {
                    b.HasOne("HardwareStoreAPI.Modelo.Producto", null)
                        .WithOne()
                        .HasForeignKey("HardwareStoreAPI.Modelo.Portatil", "IdProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HardwareStoreAPI.Modelo.Sobremesa", b =>
                {
                    b.HasOne("HardwareStoreAPI.Modelo.Producto", null)
                        .WithOne()
                        .HasForeignKey("HardwareStoreAPI.Modelo.Sobremesa", "IdProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HardwareStoreAPI.Modelo.Producto", b =>
                {
                    b.Navigation("DescripcionGeneral");
                });

            modelBuilder.Entity("HardwareStoreAPI.Modelo.Usuario", b =>
                {
                    b.Navigation("CarritoCompra");

                    b.Navigation("ListaFavoritos");
                });
#pragma warning restore 612, 618
        }
    }
}
