// <auto-generated />
using HardwareStoreAPI.Services;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HardwareStoreAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("HardwareStoreAPI.Modelo.CarritoCompra", b =>
                {
                    b.Property<int>("id_carrito")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("cantidad")
                        .HasColumnType("int");

                    b.Property<int>("id_producto")
                        .HasColumnType("int");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.HasKey("id_carrito");

                    b.HasIndex("id_producto");

                    b.HasIndex("userId");

                    b.ToTable("CarritoCompras");
                });

            modelBuilder.Entity("HardwareStoreAPI.Modelo.DescripcionGeneral", b =>
                {
                    b.Property<int>("IdDescripcionGeneral")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Almacenamiento")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CPU")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Dimensiones")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("GPU")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("IdProducto")
                        .HasColumnType("int");

                    b.Property<double>("Peso")
                        .HasColumnType("double");

                    b.Property<string>("PlacaBase")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("RAM")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SistemaOperativo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("IdDescripcionGeneral");

                    b.HasIndex("IdProducto")
                        .IsUnique();

                    b.ToTable("DescripcionGeneral");
                });

            modelBuilder.Entity("HardwareStoreAPI.Modelo.ListaFavoritos", b =>
                {
                    b.Property<int>("id_favorito")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("id_producto")
                        .HasColumnType("int");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.HasKey("id_favorito");

                    b.HasIndex("id_producto");

                    b.HasIndex("userId");

                    b.ToTable("ListaFavoritos");
                });

            modelBuilder.Entity("HardwareStoreAPI.Modelo.Producto", b =>
                {
                    b.Property<int>("IdProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Categoria")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ImagenUrl")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NombreEmpresa")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NombreProducto")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdProducto");

                    b.ToTable("Productos", (string)null);

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("HardwareStoreAPI.Modelo.Usuario", b =>
                {
                    b.Property<int>("userId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("UrlprofilePhoto")
                        .HasColumnType("longtext");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("userName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("userId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("HardwareStoreAPI.Modelo.Movil", b =>
                {
                    b.HasBaseType("HardwareStoreAPI.Modelo.Producto");

                    b.Property<int>("Bateria")
                        .HasColumnType("int");

                    b.Property<int>("Camara")
                        .HasColumnType("int");

                    b.Property<int>("Pulgadas")
                        .HasColumnType("int");

                    b.Property<string>("Resolucion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.ToTable("Moviles", (string)null);
                });

            modelBuilder.Entity("HardwareStoreAPI.Modelo.Portatil", b =>
                {
                    b.HasBaseType("HardwareStoreAPI.Modelo.Producto");

                    b.Property<int>("Bateria")
                        .HasColumnType("int");

                    b.Property<int>("Pulgadas")
                        .HasColumnType("int");

                    b.Property<string>("Resolucion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("tipoPc")
                        .HasColumnType("int");

                    b.ToTable("Portatiles", (string)null);
                });

            modelBuilder.Entity("HardwareStoreAPI.Modelo.Sobremesa", b =>
                {
                    b.HasBaseType("HardwareStoreAPI.Modelo.Producto");

                    b.Property<int>("tipoPc")
                        .HasColumnType("int");

                    b.ToTable("Sobremesas", (string)null);
                });

            modelBuilder.Entity("HardwareStoreAPI.Modelo.CarritoCompra", b =>
                {
                    b.HasOne("HardwareStoreAPI.Modelo.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("id_producto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HardwareStoreAPI.Modelo.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("HardwareStoreAPI.Modelo.DescripcionGeneral", b =>
                {
                    b.HasOne("HardwareStoreAPI.Modelo.Producto", "Producto")
                        .WithOne("DescripcionGeneral")
                        .HasForeignKey("HardwareStoreAPI.Modelo.DescripcionGeneral", "IdProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("HardwareStoreAPI.Modelo.ListaFavoritos", b =>
                {
                    b.HasOne("HardwareStoreAPI.Modelo.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("id_producto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HardwareStoreAPI.Modelo.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("HardwareStoreAPI.Modelo.Movil", b =>
                {
                    b.HasOne("HardwareStoreAPI.Modelo.Producto", null)
                        .WithOne()
                        .HasForeignKey("HardwareStoreAPI.Modelo.Movil", "IdProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HardwareStoreAPI.Modelo.Portatil", b =>
                {
                    b.HasOne("HardwareStoreAPI.Modelo.Producto", null)
                        .WithOne()
                        .HasForeignKey("HardwareStoreAPI.Modelo.Portatil", "IdProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HardwareStoreAPI.Modelo.Sobremesa", b =>
                {
                    b.HasOne("HardwareStoreAPI.Modelo.Producto", null)
                        .WithOne()
                        .HasForeignKey("HardwareStoreAPI.Modelo.Sobremesa", "IdProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HardwareStoreAPI.Modelo.Producto", b =>
                {
                    b.Navigation("DescripcionGeneral");
                });
#pragma warning restore 612, 618
        }
    }
}
